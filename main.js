/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,u,s,c,l){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e,this._link=n,this._likes=r,this._owner=o,this.__id=i,this._api=a,this._handleZoom=s,this._myId=u,this._handleClickDelCard=c,this._handleCardClickHeart=l,this._likeStatus={status:!1}}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector("#card-template").content.cloneNode(!0).querySelector(".elements__item-list")}},{key:"setTheNumberOfLikes",value:function(e){this._element.querySelector(".elements__how-like").textContent=e}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".elements__cut-text").textContent=this._name,this._element.querySelector(".elements__image").src=this._link,this._element.querySelector(".elements__image").alt=this._name,this._owner._id!=this._myId&&this._element.querySelector(".elements__dell").classList.add("elements__dell_none"),this.setTheNumberOfLikes(this._likes.length),this._likes.findIndex((function(t){return t._id==e._myId}))>=0&&(this._element.querySelector(".elements__hart").classList.add("elements__hart_activ"),this._likeStatus.status=!0),this._element}},{key:"_handleMessegeClick",value:function(e){0==this._likeStatus.status?(this._handleCardClickHeart(this.__id,this._likeStatus.status,this._element),this._likeStatus.status=!0,e.target.classList.toggle("elements__hart_activ")):(this._handleCardClickHeart(this.__id,this._likeStatus.status,this._element),e.target.classList.toggle("elements__hart_activ"),this._likeStatus.status=!1)}},{key:"deleteCsrdOnSite",value:function(e){e.remove()}},{key:"_elementDelete",value:function(){this._handleClickDelCard(this.__id,this._element,this.deleteCsrdOnSite)}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".elements__hart").addEventListener("click",(function(t){e._handleMessegeClick(t)})),this._element.querySelector(".elements__dell").addEventListener("click",(function(){e._elementDelete()})),this._element.querySelector(".elements__image").addEventListener("click",(function(t){e._handleZoom(e._name,e._link)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_handleFormInput",(function(e){var t=e.currentTarget,n=e.target;o._setCustomError(n),o._setFieldError(n),o._toggleButtonState(t)})),r(this,"toggleButtonStateOn",(function(){o._submitButton.classList.add(o._buttonValid),o._submitButton.removeAttribute("disabled")})),r(this,"toggleButtonStateOff",(function(){o._submitButton.classList.remove(o._buttonValid),o._submitButton.setAttribute("disabled","disabled")})),r(this,"_toggleButtonState",(function(e){e.checkValidity()?o.toggleButtonStateOn():o.toggleButtonStateOff()})),this._formSelector=t.formSelector,this._buttonValid=t.buttonValid,this._popup=document.querySelector(n),this._submitButton=this._popup.querySelector(t.submitButtonSelector),this._popupContent=this._popup.querySelector(this._formSelector)}var t,o;return t=e,(o=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._popupContent.addEventListener("submit",(function(e){e.preventDefault()})),this._popupContent.addEventListener("input",(function(t){e._handleFormInput(t)}))}},{key:"_setCustomError",value:function(e){e.validity,e.setCustomValidity("")}},{key:"_setFieldError",value:function(e){document.querySelector("#".concat(e.id,"-error")).textContent=e.validationMessage}},{key:"resetInputError",value:function(){this._spanOnPopup=this._popup.querySelectorAll("span"),this._spanOnPopup.forEach((function(e){return e.textContent=""}))}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"setItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_is-open"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_is-open"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupClose=this._popup.querySelector(".popup__close"),this._popupClose.addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function _(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleFormSubmit=r,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formList=this._popup.querySelectorAll("input"),this._formValues={},this._formList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setSubmitAtion",value:function(e){this._handleSubmitCallBack=e}},{key:"setEventListeners",value:function(){var e=this;f(d(a.prototype),"setEventListeners",this).call(this),this._popupFormSubmit=this._popup.querySelector(".popup__content"),this._buttonInfomationAboutSave=this._popup.querySelector(".popup__save"),this._popupFormSubmit.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues(),e._buttonInfomationAboutSave,e._handleSubmitCallBack)}))}},{key:"close",value:function(){f(d(a.prototype),"close",this).call(this),this._popupFormSubmit.reset()}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function S(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._sizeElementText=t._popup.querySelector("#size-txt-element"),t._sizeElementImg=t._popup.querySelector("#size-image-element"),t}return t=a,(n=[{key:"open",value:function(e,t){b(w(a.prototype),"open",this).call(this),this._sizeElementText.textContent=e,this._sizeElementImg.src=t,this._sizeElementImg.alt=e}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._professionSelector=n,this._namePopup=document.querySelector(t),this._professionPopup=document.querySelector(this._professionSelector),this._avatar=document.querySelector(".profile__image")}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{nameProfile:this._namePopup.textContent,professionProfile:this._professionPopup.textContent}}},{key:"setUserInfo",value:function(e,t){this._namePopup.textContent=e,this._professionPopup.textContent=t}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}],n&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"getInitialUser",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"patchUserInfoNameAbout",value:function(e,t){return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"postCard",value:function(e,t){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"getOneCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"putLikeCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deleteLikeCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"patchAvatar",value:function(e){return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),L={formSelector:".popup__content",buttonValid:"popup__save_valid",submitButtonSelector:".popup__save"},q=".popup_type_edit-profile",I=".popup_type_new-card",T=".popup_type_sure-del",x=".popup_type_changl-avatar",U=document.querySelector(".profile__button-open"),A=document.querySelector(".profile__button-add-site"),B=document.querySelector(".profile__image"),R=document.querySelector("#popup-input-name"),V=document.querySelector("#popup-input-profession");function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}document.querySelector("#popup-card-input-site"),document.querySelector("#popup-card-input-src");var D=new y(q,{handleFormSubmit:function(e,t){var n=e.name,r=e.profession,o=re.patchUserInfoNameAbout(n,r);t.textContent="Сохранение...",o.then((function(){z.setUserInfo(n,r)})).then((function(){return D.close()})).catch((function(e){console.log(e)})).finally((function(){return t.textContent="Сохранить"}))}});D.setEventListeners();var z=new O(".profile__name",".profile__profession");U.addEventListener("click",(function(){var e;D.open(),Q.resetInputError(),e=z.getUserInfo(),R.value=e.nameProfile,V.value=e.professionProfile}));var N=new y(I,{handleFormSubmit:function(e,t){var n=e.name,r=e.link;t.textContent="Сохранение...";var o=n,i=r;re.postCard(o,i).then((function(e){var t=ee(e.name,e.link,e.likes,e.owner,e._id,re);ne.setItem(t),W.toggleButtonStateOff()})).then((function(){return N.close()})).catch((function(e){console.log(e)})).finally((function(){return t.textContent="Сохранить"}))}});N.setEventListeners(),A.addEventListener("click",(function(){N.open(),W.resetInputError()}));var H,M=new C(".popup_type_image");function G(e,t){M.open(e,t)}function J(e,t,n){return $.open(),$.setSubmitAtion(n),H={id:e,element:t}}function Z(e,t,n){0==this._likeStatus.status?re.putLikeCard(e).then((function(e){return e.likes.length})).then((function(e){n.querySelector(".elements__how-like").textContent=e})):re.deleteLikeCard(e).then((function(e){return e.likes.length})).then((function(e){n.querySelector(".elements__how-like").textContent=e}))}M.setEventListeners();var $=new y(T,{handleFormSubmit:function(e,t,n){re.deleteCard(H.id).then((function(){return n(H.element)})).then((function(){return $.close()})).catch((function(e){console.log(e)}))}});$.setEventListeners(),B.addEventListener("click",(function(){K.open(),Y.resetInputError()}));var K=new y(x,{handleFormSubmit:function(e,t){var n=e.link;t.textContent="Сохранение...",re.patchAvatar(n).then((function(){return z.setUserAvatar(n)})).then((function(){Y.toggleButtonStateOff(),K.close()})).catch((function(e){console.log(e)})).finally((function(){return t.textContent="Сохранить"}))}});K.setEventListeners();var Q=new o(L,q);Q.enableValidation();var W=new o(L,I);W.enableValidation();var X=new o(L,T);X.enableValidation(),X.toggleButtonStateOn();var Y=new o(L,x);function ee(e,n,r,o,i,a){return new t(e,n,r,o,i,a,"f03d1a7c9876ea4c7fb48341",G,J,Z).generateCard()}Y.enableValidation(),new t;var te=".elements__item",ne=new a({},te),re=new P({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41/",headers:{authorization:"06950c87-f349-452d-a6bd-e523931209ac","Content-Type":"application/json"}});Promise.all([re.getInitialUser(),re.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return F(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];z.setUserInfo(o.name,o.about),z.setUserAvatar(o.avatar);var u=new a({renderer:function(e){var t=ee(e.name,e.link,e.likes,e.owner,e._id,re);u.setItem(t)}},te);u.renderItems(i)})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,